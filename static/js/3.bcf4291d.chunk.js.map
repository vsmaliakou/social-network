{"version":3,"sources":["components/Profile/ProfileInfo/ProfileData/ProfileData.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/withAuthRedirect.tsx","assets/images/user.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/headerPhoto.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileData/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileData/Contact.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","restProps","to","React","connect","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","profileStatus","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateUserStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profilePage","error","onSubmit","profileInfoContainer","aboutMe","profileInfoTitle","profileInfoContent","createField","Textarea","LookingForAJob","Input","ProfessionalSkills","profileInfoContacts","keys","contacts","map","key","contact","formSummaryError","buttonEdit","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","lookingForAJob","lookingForAJobDescription","onClick","Preloader","ProfileInfo","savePhoto","saveProfile","profileBlock","headerContainer","src","headerPhoto","photos","large","userPhoto","mainPhoto","photoSelection","type","target","files","headerProfile","nameBlock","profileName","fullName","headerMenu","href","profileDataBlock","profileDataContainer","initialValues","formData","then","Post","item","message","likeCount","MyPosts","memo","postsElements","posts","reverse","p","id","postsBlock","AddNewPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","name","component","placeholder","validate","requiredField","Profile","profileContainer","MyPostsContainer","ProfileContainer","userId","match","params","JSON","stringify","authorizedUserId","history","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","profile","data","withRouter"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,qBAAuB,0CAA0C,QAAU,6BAA6B,iBAAmB,sCAAsC,mBAAqB,wCAAwC,eAAiB,oCAAoC,mBAAqB,wCAAwC,oBAAsB,yCAAyC,WAAa,gCAAgC,iBAAmB,wC,+ECGrgB,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,+IIIhGC,EAA6B,SAACC,GAAD,MAA+C,CAC9EC,OAAQD,EAAME,KAAKD,SAGhB,SAASE,EAAqBC,GAA8B,IACzDC,EADwD,uKAEhD,IAAD,EACwBC,KAAKC,MAA7BN,EADA,EACAA,OAAWO,EADX,0BAEL,OAAKP,EACE,kBAACG,EAAcI,GADF,kBAAC,IAAD,CAAUC,GAAI,cAJoB,GAC9BC,IAAMN,WAUtC,OAFqCO,YAAQZ,EAARY,CAAoCN,K,oBCtB7E/B,EAAOC,QAAU,IAA0B,kC,oBCC3CD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,gBAAkB,qCAAqC,UAAY,+BAA+B,cAAgB,mCAAmC,UAAY,+BAA+B,YAAc,iCAAiC,WAAa,gCAAgC,iBAAmB,sCAAsC,qBAAuB,4C,oBCD/aD,EAAOC,QAAU,IAA0B,yC,oBCC3CD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,iBAAmB,oC,yIC+CtBqC,EAxCsD,SAACL,GAAW,IAAD,EAE9CM,oBAAS,GAFqC,mBAEvEC,EAFuE,KAE7DC,EAF6D,OAGlDF,mBAASN,EAAMS,QAHmC,mBAGvEA,EAHuE,KAG/DC,EAH+D,KAK5EC,qBAAU,WACND,EAAUV,EAAMS,UACjB,CAACT,EAAMS,SAaV,OACI,8BACOF,GACH,yBAAKK,UAAWC,IAAEC,eACd,0BAAMC,cAfO,WACrBP,GAAY,KAcoCR,EAAMS,QAAU,cAG3DF,GACD,yBAAKK,UAAWC,IAAEC,eACd,2BAAOE,SAbI,SAACC,GACpBP,EAAUO,EAAEC,cAAc/B,QAaXgC,WAAW,EACXC,OAnBQ,WACvBZ,GAAY,GACZR,EAAMqB,iBAAiBZ,IAkBRtB,MAAOsB,O,mCCKfa,EAFkBC,YAAgD,CAACC,KAAM,gBAAvDD,EAjCgF,SAAC,GAAwC,IAAvCE,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,MAC1I,OACI,0BAAMC,SAAUH,GAEZ,yBAAKb,UAAWC,IAAEgB,sBACd,yBAAKjB,UAAWC,IAAEiB,SACd,0BAAMlB,UAAWC,IAAEkB,kBAAnB,aAAqD,0BAAMnB,UAAWC,IAAEmB,oBAAqBC,YAAY,WAAY,UAAWC,IAAU,MAE9I,6BACI,yBAAKtB,UAAWC,IAAEsB,gBACd,0BAAMvB,UAAWC,IAAEkB,kBAAnB,uBAA+D,0BAAMnB,UAAWC,IAAEmB,oBAAqBC,YAAY,GAAI,iBAAkBG,IAAO,GAAI,cAExJ,yBAAKxB,UAAWC,IAAEwB,oBACd,0BAAMzB,UAAWC,IAAEkB,kBAAnB,2BAAmE,0BAAMnB,UAAWC,IAAEmB,oBAAqBC,YAAY,yBAA0B,4BAA6BC,IAAU,MAE5L,yBAAKtB,UAAWC,IAAEyB,qBACd,0BAAM1B,UAAWC,IAAEkB,kBAAnB,aADJ,IAC2DvD,OAAO+D,KAAKb,EAAeA,EAAYc,SAAW,IAAIC,KAAI,SAACC,GAClH,OAAO,yBAAKA,IAAKA,EAAK9B,UAAWC,IAAE8B,SAC/B,0BAAM/B,UAAWC,IAAEmB,oBAAqBU,EAAxC,KAAoD,8BAAOT,YAAYS,EAAK,YAAcA,EAAKN,IAAO,SAItGT,GAAS,yBAAKf,UAAWC,IAAE+B,kBACtBjB,MAMrB,6BAAK,4BAAQf,UAAWC,IAAEgC,YAArB,a,0BCzBFC,EANwB,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aACnD,OACI,yBAAKpC,UAAWC,IAAEmB,oBAAoB,8BAAOe,EAAP,KAA6B,8BAAOC,KCsCnEC,EApCgC,SAAC,GAA0C,IAAzCvB,EAAwC,EAAxCA,YAAawB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAEnE,OAAKzB,EAKD,6BACI,yBAAKd,UAAWC,IAAEgB,sBACd,yBAAKjB,UAAWC,IAAEiB,SACd,0BAAMlB,UAAWC,IAAEkB,kBAAnB,aAAqD,0BAAMnB,UAAWC,IAAEmB,oBAAqBN,EAAYI,UAE7G,6BACI,yBAAKlB,UAAWC,IAAEsB,gBACd,0BAAMvB,UAAWC,IAAEkB,kBAAnB,uBAA+D,8BAAOL,EAAY0B,eAAiB,MAAQ,OAE9G1B,EAAY0B,gBACb,yBAAKxC,UAAWC,IAAEwB,oBACd,0BAAMzB,UAAWC,IAAEkB,kBAAnB,2BAAmE,0BAAMnB,UAAWC,IAAEmB,oBAAqBN,EAAY2B,4BAG3H,yBAAKzC,UAAWC,IAAEyB,qBACd,0BAAM1B,UAAWC,IAAEkB,kBAAnB,aADJ,IAC2DvD,OAAO+D,KAAKb,EAAYc,UAAUC,KAAI,SAACC,GAC9F,OAAO,kBAAC,EAAD,CAASA,IAAKA,EAAKK,aAAcL,EACxBM,aAActB,EAAYc,SAASE,WAK9DQ,GAAW,6BACR,4BAAQtC,UAAWC,IAAEgC,WAAYS,QAASH,GAA1C,UA3BD,kBAACI,EAAA,EAAD,OC8EAC,EA3EgC,SAAC,GAOO,IANH9B,EAME,EANFA,YACAjB,EAKE,EALFA,OACAY,EAIE,EAJFA,iBACA6B,EAGE,EAHFA,QACAO,EAEE,EAFFA,UACAC,EACE,EADFA,YACE,EAEpBpD,oBAAS,GAFW,mBAE7CC,EAF6C,KAEnCC,EAFmC,KAkBlD,OACI,yBAAKI,UAAWC,IAAE8C,cACd,yBAAK/C,UAAWC,IAAE+C,iBACd,yBAAKC,IAAKC,MACV,yBAAKD,KAAgB,OAAXnC,QAAW,IAAXA,OAAA,EAAAA,EAAaqC,OAAOC,QAASC,IAAWrD,UAAWC,IAAEqD,YAC9DhB,GAAW,yBAAKtC,UAAWC,IAAEsD,gBAC1B,2BAAOC,KAAK,OAAOpD,SApBP,SAACC,GAAsC,IAAD,GAC9D,UAAIA,EAAEoD,OAAOC,aAAb,aAAI,EAAgBlF,SAChBqE,EAAUxC,EAAEoD,OAAOC,MAAM,QAoBrB,yBAAK1D,UAAWC,IAAE0D,eACd,yBAAK3D,UAAWC,IAAE2D,WACd,0BAAM5D,UAAWC,IAAE4D,aAAnB,OAAiC/C,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAagD,UAC9C,oDAEJ,yBAAK9D,UAAWC,IAAE8D,YACd,6BACI,uBAAGC,KAAM,YAAT,YAEJ,6BACI,uBAAGA,KAAM,YAAT,YAEJ,6BACI,uBAAGA,KAAM,YAAT,UAEJ,6BACI,uBAAGA,KAAM,YAAT,aAKhB,yBAAKhE,UAAWC,IAAEgE,kBACd,yBAAKjE,UAAWC,IAAEiE,sBACd,kBAAC,EAAD,CAAwBrE,OAAQA,EAAQY,iBAAkBA,IACzDd,EACK,kBAAC,EAAD,CACEmB,YAAaA,EACbqD,cAAerD,EACfE,SA5CP,SAACoD,GACdtB,EAAYsB,GAAUC,MAClB,WACIzE,GAAY,SA0CF,kBAAC,EAAD,CACEkB,YAAaA,EACbwB,QAASA,EACTC,aAAc,WACV3C,GAAY,U,oDCnE7B0E,EAbkB,SAAClF,GAC9B,OACI,yBAAKY,UAAWC,IAAEsE,MACd,yBACItB,IAAI,uGACP7D,EAAMoF,QACP,6BACI,8BAAOpF,EAAMqF,c,gBCEvBC,EAAiCnF,IAAMoF,MAAK,SAACvF,GAE/C,IAAIwF,EAAgB,YAAIxF,EAAM0B,YAAY+D,OAAOC,UAAUjD,KAAI,SAAAkD,GAAC,OAAI,kBAAC,EAAD,CAAMjD,IAAKiD,EAAEC,GAAIA,GAAID,EAAEC,GAAIR,QAASO,EAAEP,QAASC,UAAWM,EAAEN,eAMhI,OACI,yBAAKzE,UAAWC,IAAEgF,YACd,wCACA,kBAACC,EAAD,CAAqBlE,SAPb,SAACmE,GACb/F,EAAMgG,QAAQD,EAAOE,gBAOjB,yBAAKrF,UAAWC,IAAE4E,OACbD,OAOXU,EAAcC,YAAiB,IAoB/BL,EAAsBvE,YAAU,CAACC,KAAM,yBAAjBD,EAlByB,SAACvB,GAClD,OACI,0BAAM4B,SAAU5B,EAAMyB,cAClB,6BACI,kBAAC2E,EAAA,EAAD,CACIC,KAAK,cACLC,UAAWpE,IACXqE,YAAY,eACZC,SAAU,CAACC,IAAeP,MAGlC,6BACI,iDAQDZ,I,QC3CAlF,eANO,SAACX,GACnB,MAAO,CACHiC,YAAajC,EAAMiC,eAIa,CACpCsE,aADW5F,CACDkF,G,kBCkBCoB,EAhBwB,SAAC1G,GACpC,OACI,yBAAKY,UAAWC,IAAE8F,kBACd,kBAAC,EAAD,CACIjF,YAAa1B,EAAM0B,YACnBjB,OAAQT,EAAMS,OACdY,iBAAkBrB,EAAMqB,iBACxB6B,QAASlD,EAAMkD,QACfO,UAAWzD,EAAMyD,UACjBC,YAAa1D,EAAM0D,cAEvB,kBAACkD,EAAD,Q,wBCGNC,E,+KAGE,IAAIC,EAAS/G,KAAKC,MAAM+G,MAAMC,OAAOF,OAChCA,IACDA,EAASG,KAAKC,UAAUnH,KAAKC,MAAMmH,oBAE/BpH,KAAKC,MAAMoH,QAAQlI,KAAK,UAGhCa,KAAKC,MAAMqH,eAAeP,GAC1B/G,KAAKC,MAAMsH,cAAcR,K,0CAGzB/G,KAAKwH,mB,yCAEUC,EAA2CC,EAAyBC,GAChF3H,KAAKC,MAAM+G,MAAMC,OAAOF,SAAWU,EAAUT,MAAMC,OAAOF,QACzD/G,KAAKwH,mB,+BAKT,OACI,kBAAC,EAAD,iBACQxH,KAAKC,MADb,CAEIkD,SAAUnD,KAAKC,MAAM+G,MAAMC,OAAOF,c,GA1BnB3G,IAAMN,WAyCtB8H,sBACXvH,aAVkB,SAACX,GACnB,MAAO,CACHiC,YAAajC,EAAMiC,YAAYkG,QAC/BnH,OAAQhB,EAAMiC,YAAYjB,OAC1B0G,iBAAkB1H,EAAME,KAAKkI,KAAKjC,GAClClG,OAAQD,EAAME,KAAKD,UAKE,CAAC2H,mBAAgBC,kBAAejG,qBAAkBoC,cAAWC,kBACtFoE,IACAlI,IAHW+H,CAIbd","file":"static/js/3.bcf4291d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileData_profileStatus__Zwedv\",\"profileInfoContainer\":\"ProfileData_profileInfoContainer__1_50A\",\"aboutMe\":\"ProfileData_aboutMe__15CCU\",\"profileInfoTitle\":\"ProfileData_profileInfoTitle__KMQ_h\",\"profileInfoContent\":\"ProfileData_profileInfoContent__37EPK\",\"LookingForAJob\":\"ProfileData_LookingForAJob__2mJdO\",\"ProfessionalSkills\":\"ProfileData_ProfessionalSkills__3ITc-\",\"profileInfoContacts\":\"ProfileData_profileInfoContacts__1afvb\",\"buttonEdit\":\"ProfileData_buttonEdit__2kEzj\",\"formSummaryError\":\"ProfileData_formSummaryError__nWm8D\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {Component, ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport { AppRootStateType } from \"../redux/redux-store\";\r\n\r\ntype MapStateToProps = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppRootStateType): MapStateToProps => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\r\n    class RedirectComponent extends React.Component<MapStateToProps> {\r\n        render() {\r\n            let {isAuth, ...restProps} = this.props\r\n            if (!isAuth) return <Redirect to={'login'}/>\r\n            return <Component {...restProps as T}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","module.exports = __webpack_public_path__ + \"static/media/user.35aa54a1.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"ProfileInfo_profileBlock__hVD-X\",\"headerContainer\":\"ProfileInfo_headerContainer__34bNd\",\"mainPhoto\":\"ProfileInfo_mainPhoto__tjjbB\",\"headerProfile\":\"ProfileInfo_headerProfile__ZI9RB\",\"nameBlock\":\"ProfileInfo_nameBlock__3lBCQ\",\"profileName\":\"ProfileInfo_profileName__3_VSz\",\"headerMenu\":\"ProfileInfo_headerMenu__FDzlR\",\"profileDataBlock\":\"ProfileInfo_profileDataBlock__2T-_Y\",\"profileDataContainer\":\"ProfileInfo_profileDataContainer__3mH65\"};","module.exports = __webpack_public_path__ + \"static/media/headerPhoto.7f4d9162.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3lvOM\",\"posts\":\"MyPosts_posts__viENX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2VERT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__3Vk_p\"};","import React, {ChangeEvent, useState, useEffect} from \"react\";\r\nimport s from './ProfileData.module.css'\r\n\r\ntype ProfileStatusWithHooksType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<ProfileStatusWithHooksType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div className={s.profileStatus}>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"no status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div className={s.profileStatus}>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport s from './ProfileData.module.css'\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\nimport {UserProfileType} from \"../../../../redux/store\";\r\n\r\ntype ProfileDataFormType = {\r\n    profilePage: UserProfileType\r\n}\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<UserProfileType, ProfileDataFormType> & ProfileDataFormType> = ({handleSubmit, profilePage, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div className={s.profileInfoContainer}>\r\n                <div className={s.aboutMe}>\r\n                    <span className={s.profileInfoTitle}>About me:</span><span className={s.profileInfoContent}>{createField(\"About me\", \"aboutMe\", Textarea, [])}</span>\r\n                </div>\r\n                <div>\r\n                    <div className={s.LookingForAJob}>\r\n                        <span className={s.profileInfoTitle}>Looking for a job: </span><span className={s.profileInfoContent}>{createField(\"\", \"lookingForAJob\", Input, [], \"checkbox\")}</span>\r\n                    </div>\r\n                    <div className={s.ProfessionalSkills}>\r\n                        <span className={s.profileInfoTitle}>My professional skills:</span><span className={s.profileInfoContent}>{createField(\"My professional skills\", \"lookingForAJobDescription\", Textarea, [])}</span>\r\n                    </div>\r\n                    <div className={s.profileInfoContacts}>\r\n                        <span className={s.profileInfoTitle}>Contacts:</span> {Object.keys(profilePage ?  profilePage.contacts : \"\").map((key) => {\r\n                        return <div key={key} className={s.contact}>\r\n                            <span className={s.profileInfoContent}>{key}:</span><span>{createField(key, \"contacts.\" + key, Input, [])}</span>\r\n                        </div>\r\n                    })}\r\n                        {\r\n                            error && <div className={s.formSummaryError}>\r\n                                {error}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div><button className={s.buttonEdit}>save</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm<UserProfileType, ProfileDataFormType>({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React from \"react\";\r\nimport s from \"./ProfileData.module.css\";\r\n\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<ContactType> = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={s.profileInfoContent}><span>{contactTitle}:</span ><span>{contactValue}</span></div>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from \"react\";\r\nimport Preloader from \"../../../Common/Preloader/Preloader\";\r\nimport s from \"./ProfileData.module.css\";\r\nimport {ContactsType, UserProfileType} from \"../../../../redux/store\";\r\nimport Contact from \"./Contact\";\r\n\r\ntype ProfileDataType = {\r\n    profilePage: UserProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profilePage, isOwner, goToEditMode}) => {\r\n\r\n    if (!profilePage) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.profileInfoContainer}>\r\n                <div className={s.aboutMe}>\r\n                    <span className={s.profileInfoTitle}>About me:</span><span className={s.profileInfoContent}>{profilePage.aboutMe}</span>\r\n                </div>\r\n                <div>\r\n                    <div className={s.LookingForAJob}>\r\n                        <span className={s.profileInfoTitle}>Looking for a job: </span><span>{profilePage.lookingForAJob ? \"yes\" : \"no\"}</span>\r\n                    </div>\r\n                    {profilePage.lookingForAJob &&\r\n                    <div className={s.ProfessionalSkills}>\r\n                        <span className={s.profileInfoTitle}>My professional skills:</span><span className={s.profileInfoContent}>{profilePage.lookingForAJobDescription}</span>\r\n                    </div>\r\n                    }\r\n                    <div className={s.profileInfoContacts}>\r\n                        <span className={s.profileInfoTitle}>Contacts:</span> {Object.keys(profilePage.contacts).map((key) => {\r\n                        return <Contact key={key} contactTitle={key}\r\n                                        contactValue={profilePage.contacts[key as keyof ContactsType]}/>\r\n                    })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOwner && <div>\r\n                <button className={s.buttonEdit} onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {UserProfileType} from \"../../../redux/store\";\r\nimport ProfileStatusWithHooks from \"./ProfileData/ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.jpg'\r\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\r\nimport headerPhoto from '../../../assets/images/headerPhoto.jpg'\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\n\r\ntype ProfileInfoType = {\r\n    profilePage: UserProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (formData: UserProfileType) => Promise<any>\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoType> = ({\r\n                                                    profilePage,\r\n                                                    status,\r\n                                                    updateUserStatus,\r\n                                                    isOwner,\r\n                                                    savePhoto,\r\n                                                    saveProfile\r\n                                                }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: UserProfileType) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileBlock}>\r\n            <div className={s.headerContainer}>\r\n                <img src={headerPhoto}/>\r\n                <img src={profilePage?.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <div className={s.photoSelection}>\r\n                    <input type=\"file\" onChange={onMainPhotoSelected}/>\r\n                </div>}\r\n                <div className={s.headerProfile}>\r\n                    <div className={s.nameBlock}>\r\n                        <span className={s.profileName}>{profilePage?.fullName}</span>\r\n                        <span>Belarus, Rogachev</span>\r\n                    </div>\r\n                    <div className={s.headerMenu}>\r\n                        <div>\r\n                            <a href={'/profile'}>Friends</a>\r\n                        </div>\r\n                        <div>\r\n                            <a href={'/profile'}>My news</a>\r\n                        </div>\r\n                        <div>\r\n                            <a href={'/profile'}>Photo</a>\r\n                        </div>\r\n                        <div>\r\n                            <a href={'/profile'}>Video</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.profileDataBlock}>\r\n                <div className={s.profileDataContainer}>\r\n                    <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n                    {editMode\r\n                        ? <ProfileDataForm\r\n                            profilePage={profilePage}\r\n                            initialValues={profilePage}\r\n                            onSubmit={onSubmit}/>\r\n                        : <ProfileData\r\n                            profilePage={profilePage}\r\n                            isOwner={isOwner}\r\n                            goToEditMode={() => {\r\n                                setEditMode(true)\r\n                            }}\r\n                        />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport {PostType} from \"../../../../redux/store\";\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://yt3.ggpht.com/a/AATXAJytBX4x38SJiFeRv9M9zdseNIPWzcWf_slSlz5b=s900-c-k-c0xffffffff-no-rj-mo'/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {ProfilePageType} from \"../../../redux/store\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nexport type MyPostsType = {\r\n    profilePage: ProfilePageType\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsType> = React.memo((props) => {\r\n\r\n    let postsElements = [...props.profilePage.posts].reverse().map(p => <Post key={p.id} id={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n\r\n    let onAddPost = (values: any) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps>  = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name=\"newPostText\"\r\n                    component={Textarea}\r\n                    placeholder=\"Post message\"\r\n                    validate={[requiredField, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    addPost})(MyPosts)","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {UserProfileType} from \"../../redux/store\";\r\nimport s from './Profile.module.css'\r\n\r\ntype ProfileType = {\r\n    profilePage: UserProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (formData: UserProfileType) => Promise<any>\r\n}\r\n\r\nconst Profile: React.FC<ProfileType> = (props) => {\r\n    return (\r\n        <div className={s.profileContainer}>\r\n            <ProfileInfo\r\n                profilePage={props.profilePage}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatus}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {UserProfileType} from \"../../redux/store\";\r\nimport {withRouter, RouteComponentProps} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport { AppRootStateType } from \"../../redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: UserProfileType\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (formData: UserProfileType) => Promise<any>\r\n}\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype PathParamType = {\r\n    userId: string\r\n}\r\nexport type ProfileContainerType = RouteComponentProps<PathParamType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerType> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = JSON.stringify(this.props.authorizedUserId)\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<ProfileContainerType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.data.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}